// Задача с конусом
// g++ -o main main.cpp Cone.cpp && ./main

#include "Cone.h"
#include <iostream>


int main()
{
    // Создание конуса с центром в начале координат
    std::cout << "Создание конуса с центром в начале координат\n";
    
    std::cout << "Введите радиус основания и высоту конуса:\n";
    int r, h;
    std::cin >> r >> h;
    
    Cone cone1(r, h);


    // Создание произвольного конуса
    std::cout << "\nСоздание произвольного конуса\n";
    
    std::cout << "Введите координаты центра основания конуса:\n";
    int x, y, z;
    std::cin >> x >> y >> z;

    std::cout << "Введите радиус основания и высоту конуса:\n";
    std::cin >> r >> h;

    Cone cone2(x, y, z, r, h);


    // Проверка работы методов
    // Для первого конуса
    std::cout << "\nДля первого конуса:\n";
    std::cout << "Площадь поверхности: " << cone1.Area() << '\n';
    std::cout << "Объем конуса: " << cone1.Volume() << '\n';

    // Для второго конуса
    std::cout << "\nДля второго конуса:\n";
    std::cout << "Площадь поверхности: " << cone2.Area() << '\n';
    std::cout << "Объем конуса: " << cone2.Volume() << '\n';



    // Динамический объект
    Cone* cone3 = new Cone();

    // Создание произвольного динамического конуса
    std::cout << "\nСоздание произвольного динамического конуса\n";
    
    std::cout << "Введите координаты центра основания конуса:\n";
    x, y, z;
    std::cin >> x >> y >> z;

    std::cout << "Введите радиус основания и высоту конуса:\n";
    std::cin >> r >> h;

    cone3->Set(x, y, z, r, h);

    std::cout << "\nДинамический конус:";
    cone3->Print();

    // Очистка памяти
    delete cone3;



    // Массив из трех одинаковых конусов
    int n = 3;
    Cone* A = new Cone[n];

    // Ввод значений
    for(int i = 0; i < n; i++)
    {
        A[i] = Cone(1, 1, 1, 1, 1);
    }
    
    // Вывод значений
    std::cout << "\n\nМассив из трех одинаковых конусов:";
    
    for(int i = 0; i < n; i++)
    {
        std::cout << '\n';
        A[i].Print();
    }

    // Освобождение памяти
    delete[] A;
}